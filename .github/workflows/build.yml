name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  RUSTFLAGS: --deny warnings
  RUSTDOCFLAGS: --deny warnings

jobs:
  test:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 2

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Test
        run: cargo --color=always test

  lint:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 2

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Run clippy
        run: cargo --color=always clippy

      - name: Run doc
        run: cargo --color=always doc

      - name: Run fmt
        run: cargo --color=always fmt --check

  audit:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 2

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Set up cargo-audit
        run: cargo --color=always install --locked cargo-audit --version "${CARGO_AUDIT_VERSION}"
        env:
          # renovate: datasource=crate depName=cargo-audit versioning=cargo
          CARGO_AUDIT_VERSION: =0.20.1

      - name: Audit
        run: cargo --color=always audit --deny warnings

  build:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 2

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Build
        run: cargo --color=always build

  semantic-release:
    needs: [audit, build, lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    timeout-minutes: 10

    steps:
      # full checkout for semantic-release
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
          # Use Deploy key with write access to push changelog to main branch (protected branch)
          ssh-key: ${{ secrets.SEMANTIC_RELEASE_SSH_KEY }}

      - name: Set up Rust
        run: rustup show

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@b1b432f13acb7768e0c8efdec416d363a57546f2 # v4.1.1
        with:
          # renovate: datasource=npm depName=semantic-release
          semantic_version: 24.1.3
          dry_run: ${{ github.event_name == 'pull_request' }}
          extra_plugins: |
            conventional-changelog-conventionalcommits@8.0.0
            @semantic-release/changelog@6.0.3
            @semantic-release/exec@6.0.3
            @semantic-release/git@10.0.1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
